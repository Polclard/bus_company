# Generated by Django 5.1.6 on 2025-05-25 13:56

from django.db import migrations

def create_routes(apps, schema_editor):
    Town = apps.get_model('buses', 'Town')
    Route = apps.get_model('buses', 'Route')

    # Example routes: start town, end town, and list of towns in between
    more_routes_data = [
        ("Skopje", "Ohrid", ["Veles", "Prilep", "Bitola"]),
        ("Bitola", "Skopje", ["Resen", "Demir Hisar", "Kichevo", "Tetovo"]),
        ("Struga", "Kumanovo", ["Debar", "Gostivar", "Skopje"]),
        ("Shtip", "Tetovo", ["Kochani", "Kumanovo", "Skopje"]),
        ("Prilep", "Kumanovo", ["Bitola", "Demir Kapija", "Skopje"]),
        ("Skopje", "Bitola", ["Kumanovo", "Shtip", "Prilep"]),
        ("Ohrid", "Strumica", ["Debar", "Radovish"]),
        ("Kumanovo", "Ohrid", ["Kratovo", "Kichevo"]),
        ("Skopje", "Struga", ["Tetovo", "Gostivar", "Debar", "Kichevo"])
    ]

    for start_name, end_name, mid_names in more_routes_data:
        try:
            start = Town.objects.get(name=start_name)
            end = Town.objects.get(name=end_name)
            mid_towns = Town.objects.filter(name__in=mid_names)

            route = Route.objects.create(start_town=start, end_town=end)
            route.towns.set(mid_towns)
        except Town.DoesNotExist as e:
            print(f"Error: {e}. Skipping route from {start_name} to {end_name}.")


class Migration(migrations.Migration):

    dependencies = [
        ('buses', '0005_populate_routes'),  # Replace with the latest migration name
    ]

    operations = [
        migrations.RunPython(create_routes),
    ]
